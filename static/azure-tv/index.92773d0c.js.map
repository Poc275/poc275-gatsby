{"mappings":"AAAA,MAAMA,KAAI,KACNC,KAAKC,UAAUC,YAAYC,cAAcC,WAAW,CAChDC,sBAAuBC,OAAON,KAAKO,MAAMC,gCAG7BR,KAAKC,UAAUC,YAAYC,cACnCM,iBAAiBT,KAAKC,UAAUS,qBAAqBC,uBAAwBC,IACjF,OAAQA,EAAMC,cACV,KAAKb,KAAKC,UAAUa,aAAaC,gBACjC,KAAKf,KAAKC,UAAUa,aAAaE,gBAC7BC,QAAQC,IAAI,+CAEZ,MACJ,KAAKlB,KAAKC,UAAUa,aAAaK,cAC7BF,QAAQC,IAAI,8CAO5BE,OAA8B,sBAAKC,IAC3BA,GACAtB","sources":["cast.js"],"sourcesContent":["const init = () => {\r\n    cast.framework.CastContext.getInstance().setOptions({\r\n        receiverApplicationId: chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID\r\n    });\r\n\r\n    const context = cast.framework.CastContext.getInstance();\r\n    context.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED, (event) => {\r\n        switch (event.sessionState) {\r\n            case cast.framework.SessionState.SESSION_STARTED:\r\n            case cast.framework.SessionState.SESSION_RESUMED:\r\n                console.log('CastContext: CastSession started or resumed');\r\n                // play();\r\n                break;\r\n            case cast.framework.SessionState.SESSION_ENDED:\r\n                console.log('CastContext: CastSession disconnected');\r\n                // Update locally as necessary\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\nwindow['__onGCastApiAvailable'] = (isAvailable) => {\r\n    if (isAvailable) {\r\n        init();\r\n    }\r\n};"],"names":["init","cast","framework","CastContext","getInstance","setOptions","receiverApplicationId","chrome","media","DEFAULT_MEDIA_RECEIVER_APP_ID","addEventListener","CastContextEventType","SESSION_STATE_CHANGED","event","sessionState","SessionState","SESSION_STARTED","SESSION_RESUMED","console","log","SESSION_ENDED","window","isAvailable"],"version":3,"file":"index.92773d0c.js.map"}